export declare const settingsTypeDefs = "#graphql\n\n  type SettingsElement {\n    key: String!\n    xpath: String!\n    target: String\n    callback: String\n  }\n\n  type SettingsNoticeList {\n    oid: Int!\n    orgName: String!\n    url: String!\n    iframe: String\n    rowXpath: String\n    paging: String\n    startPage: Int\n    endPage: Int\n    login: String\n    use: Int!\n    orgRegion: String\n    registration: String\n    title: String\n    detailUrl: String\n    postedDate: String\n    postedBy: String\n    companyInCharge: String\n    orgMan: String\n    exceptionRow: String\n    elements: [SettingsElement]\n  }\n\n  type SettingsNoticeDetail {\n    oid: Int!\n    orgName: String!\n    title: String\n    bodyHtml: String\n    fileName: String\n    fileUrl: String\n    preview: String\n    noticeDiv: String\n    noticeNum: String\n    orgDept: String\n    orgMan: String\n    orgTel: String\n    use: Int!\n    sampleUrl: String\n    down: String\n  }\n\n  type SettingsNoticeCategory {\n    sn: Int!\n    keywords: String!\n    nots: String!\n    minPoint: Float!\n    category: String!\n    creator: String\n    memo: String\n  }\n\n  type SettingsNasPath {\n    id: String!\n    pathName: String!\n    pathValue: String!\n    description: String\n    isActive: Boolean!\n  }\n\n  type SettingsAppDefault {\n    id: String!\n    settingKey: String!\n    settingValue: String!\n    description: String\n    category: String\n  }\n\n  extend type Query {\n    settingsNoticeListAll: [SettingsNoticeList!]!\n    settingsNoticeListOne(oid: Int!): SettingsNoticeList\n    settingListByOid(oid: Int): SettingsNoticeList\n    settingsNoticeListByOrg(orgName: String!): [SettingsNoticeList!]!\n    \n    settingsNoticeDetailAll: [SettingsNoticeDetail!]!\n    settingsNoticeDetailOne(oid: Int!): SettingsNoticeDetail\n    settingsNoticeDetailByOrg(orgName: String!): [SettingsNoticeDetail!]!\n    \n    settingsNoticeCategoryAll: [SettingsNoticeCategory!]!\n    settingsNoticeCategoryByCategory(category: String!): [SettingsNoticeCategory!]!\n    settingsNoticeCategoryParseKeywordWeights(keywordWeightStr: String!): [String]\n    \n    settingsNasPathAll: [SettingsNasPath!]!\n    settingsNasPathOne(id: String!): SettingsNasPath\n    \n    settingsAppDefaultAll: [SettingsAppDefault!]!\n    settingsAppDefaultByCategory(category: String!): [SettingsAppDefault!]!\n    settingsAppDefaultOne(settingKey: String!): SettingsAppDefault\n  }\n\n  extend type Mutation {\n    settingsNoticeListCreate(input: SettingsNoticeListInput!): SettingsNoticeList!\n    settingsNoticeListUpdate(input: SettingsNoticeListInput!): SettingsNoticeList!\n    settingsNoticeListDelete(oid: Int!): Boolean\n    \n    settingsNoticeDetailCreate(input: SettingsNoticeDetailInput!): SettingsNoticeDetail!\n    settingsNoticeDetailUpdate(input: SettingsNoticeDetailInput!): SettingsNoticeDetail!\n    settingsNoticeDetailDelete(oid: Int!): Boolean\n    \n    settingsNoticeCategoryCreate(input: SettingsNoticeCategoryInput!): SettingsNoticeCategory!\n    settingsNoticeCategoryUpdate(input: SettingsNoticeCategoryInput!): SettingsNoticeCategory!\n    settingsNoticeCategoryDelete(sn: Int!): Boolean\n    settingsNoticeCategoryWeightSearch(\n      keywords: String!\n      minPoint: Float!\n      field: String\n      tableName: String\n      addFields: [String]\n      addWhere: String\n    ): [Notice]\n    settingsNoticeCategoryFilterNoticeList(\n      notStr: String!\n      dicts: [CategorySearchInput]!\n      field: String\n    ): [Notice]\n    \n    settingsNasPathCreate(input: SettingsNasPathInput!): SettingsNasPath!\n    settingsNasPathUpdate(input: SettingsNasPathInput!): SettingsNasPath!\n    settingsNasPathDelete(id: String!): Boolean\n    \n    settingsAppDefaultCreate(input: SettingsAppDefaultInput!): SettingsAppDefault!\n    settingsAppDefaultUpdate(input: SettingsAppDefaultInput!): SettingsAppDefault!\n    settingsAppDefaultDelete(id: String!): Boolean\n  }\n\n  input SettingsNoticeListInput {\n    oid: Int\n    orgName: String!\n    url: String!\n    iframe: String\n    rowXpath: String\n    paging: String\n    startPage: Int\n    endPage: Int\n    login: String\n    use: Int\n    orgRegion: String\n    registration: String\n    title: String\n    detailUrl: String\n    postedDate: String\n    postedBy: String\n    companyInCharge: String\n    orgMan: String\n    exceptionRow: String\n  }\n\n  input SettingsNoticeDetailInput {\n    oid: Int\n    orgName: String!\n    title: String\n    bodyHtml: String\n    fileName: String\n    fileUrl: String\n    preview: String\n    noticeDiv: String\n    noticeNum: String\n    orgDept: String\n    orgMan: String\n    orgTel: String\n    use: Int\n    sampleUrl: String\n    down: String\n  }\n\n  input SettingsNoticeCategoryInput {\n    sn: Int\n    keywords: String!\n    nots: String!\n    minPoint: Float!\n    category: String!\n    creator: String\n    memo: String\n  }\n\n  input SettingsNasPathInput {\n    id: String\n    pathName: String!\n    pathValue: String!\n    description: String\n    isActive: Boolean\n  }\n\n  input SettingsAppDefaultInput {\n    id: String\n    settingKey: String!\n    settingValue: String!\n    description: String\n    category: String\n  }\n\n  input CategorySearchInput {\n    nid: Int\n    title: String\n    orgName: String\n    postedAt: String\n    detailUrl: String\n    category: String\n    region: String\n  }\n";
//# sourceMappingURL=settings.d.ts.map