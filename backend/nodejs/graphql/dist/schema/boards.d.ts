export declare const boardsTypeDefs = "#graphql\n  type BoardPost {\n    id: Int!\n    title: String\n    content: String\n    markdown_source: String\n    format: String\n    writer: String\n    password: String\n    created_at: String\n    updated_at: String\n    is_visible: Boolean\n  }\n\n  type BoardComment {\n    id: Int!\n    board: String!\n    post_id: Int!\n    content: String!\n    writer: String!\n    created_at: String\n    updated_at: String\n    is_visible: Boolean\n  }\n\n  type BoardCommentsResponse {\n    total_count: Int!\n    page: Int!\n    per_page: Int!\n    comments: [BoardComment!]!\n  }\n\n  input BoardPostInput {\n    id: Int\n    title: String!\n    content: String!\n    markdown_source: String\n    format: String!\n    writer: String!\n    password: String!\n    is_visible: Boolean\n  }\n\n  input BoardCommentInput {\n    id: Int\n    board: String!\n    post_id: Int!\n    content: String!\n    writer: String!\n    password: String!\n    is_visible: Boolean\n  }\n\n  input BoardPostDeleteInput {\n    id: Int!\n    password: String!\n  }\n\n  input BoardCommentDeleteInput {\n    id: Int!\n    password: String!\n  }\n\n  extend type Query {\n    boardsPostsAll(board: String!): [BoardPost!]!\n    boardsPostsOne(id: Int!, board: String!): BoardPost\n    boardsCommentsAll(board: String!, post_id: Int!, page: Int, per_page: Int): BoardCommentsResponse!\n    boardsCommentsOne(id: Int!): BoardComment\n  }\n\n  extend type Mutation {\n    boardsPostCreate(board: String!, input: BoardPostInput!): BoardPost!\n    boardsPostUpdate(board: String!, input: BoardPostInput!): BoardPost!\n    boardsPostDelete(board: String!, input: BoardPostDeleteInput!): BoardPost!\n    boardsCommentCreate(input: BoardCommentInput!): BoardComment!\n    boardsCommentUpdate(input: BoardCommentInput!): BoardComment!\n    boardsCommentDelete(input: BoardCommentDeleteInput!): BoardComment!\n  }\n";
//# sourceMappingURL=boards.d.ts.map